Installation Guide

Current Approach (10/8/2017)
I'm just running the modified code with meteorhacks:cluster
and no externaldb.

To get this to work I needed to use 16 workers and to extend the memory
allocated to each... Before I did this I was getting out of memory errors
and it was requiring 100% of CPU .... and was completely unresponsive to
the users...


Scaling
This uses the meteorhacks:cluster package
so when we start it up you need to specify the number of cores to use:

% meteor add meteorhacks:cluster
% export CLUSTER_WORKERS_COUNT=2
 or
% export CLUSTER_WORKERS_COUNT=auto
and test with
% echo $CLUSTER_WORKERS_COUNT


Also, remember to turn off the password login
% meteor remove accounts-password

and to make sure that the client/startup.js file correctly specifies gracehopper
(though I don't know if that is really needed....)

Start it, in the bash shell, as follows:

% ROOT_URL="http://gracehopper.cs-i.brandeis.edu:3500" meteor run --port 3500


************************************************
Multicore installation with external mongodb..

First we create a mongo database folder, if it doesn't already exist
% mkdir /data
% mkdir /data/db
Then we start up a mongo server running in a screen
% mkdir mongoserver
% cd mongoserver
% screen -S mongoserver
% mongod
^A^D
Then we create new folders for each of our servers and git pull in the lastest
version of the server
% mkdir multicorePRA
% cd multicorePRA
% git clone https://github.com/tjhickey724/PeerReview.git
% mv PeerReview PR1
etc.
Then we start up servers sharing the mongodb, each in their own screen
% screen -S PRA3501
% meteor npm install
% ROOT_URL="http://gracehopper.cs-i.brandeis.edu:3501" MONGO_URL="mongodb://127.0.0.1:27017" meteor run --port 3501
^A^D

************************************************
Backing up the database
% cd mongoserver
% mongodump -h 127.0.0.1 --port 3501 -d meteor

Restoring the database
% mongorestore -h 127.0.0.1 -p 27017 --db meteor --drop dump/
