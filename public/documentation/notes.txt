9/24/2017
This is for quick ideas, but everything has been moved to zenhub

Next Steps:
I just discovered that Meteor does not allow multiple oauth connections
on different servers with a shared database, so I'm going to have to user
nginx as a load balancer... I'll try this soon.

For tomorrow though, I will just git pull the latest version of the Peer Review
app and run it with meteorhacks:cluster ... the extra indexing should speed
everything up and make it more efficient... Also, I could run it with an external
database so that they don't all keep their own database...
I'll try to do this at home tomorrow and then push to gracehopper in the afternoon

Here are two good nginx/meteor links
https://medium.freecodecamp.org/first-experiences-scaling-a-meteor-app-14a48e62a4af
https://www.digitalocean.com/community/tutorials/how-to-deploy-a-meteor-js-application-on-ubuntu-14-04-with-nginx




Completed Steps
* 9/30 v1.1  created better summary page ...
* I'm going to store summary information about each student in a class
  in their StudentInfo document, and have a meteor method that can
  update this. This will allow me to sort and filter students to see
  who is doing well and who needs help...
* 9/27 after filtering out students with more than minimal reviews,
  make a random selection from the rest, this will better balance the reviews
* 9/26 allow students to see other reviews as they make their own review
* 9/25 allow students to see all of their work (e.g. reviews)
* 9/24 fixed a bug showing your answer to a question (but it showed a random answer)
* 9/24 add an overview page for orchestration so I can see
  - how many have completed problems and the average rating
  - how many reviews have been written
  - what answers have been submitted and how they have been reviewed
* remove all ES6 code (const, let and =>)
